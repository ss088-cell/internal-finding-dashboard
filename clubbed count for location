function generateLocationWiseCount() {
  var fixedSheetId = 'FIXED_SHEET_ID'; // Replace with your actual fixed sheet ID
  var fixedSpreadsheet = SpreadsheetApp.openById(fixedSheetId);

  // Get the "Detail Data" sheet
  var dataSheet = fixedSpreadsheet.getSheetByName('Detail Data');
  if (!dataSheet) {
    Logger.log("No 'Detail Data' sheet found!");
    return;
  }

  var data = dataSheet.getDataRange().getValues(); // Get all data from Detail Data sheet
  var header = data[0]; // Header row
  var locationIndex = header.indexOf("Location");
  var vprIndex = header.indexOf("VPR");
  var riskTypeIndex = header.indexOf("Risk Type");

  // Create or get the "Location Wise Count" sheet
  var countsSheet = fixedSpreadsheet.getSheetByName('Location Wise Count');
  if (!countsSheet) {
    countsSheet = fixedSpreadsheet.insertSheet('Location Wise Count');
    Logger.log("Location Wise Count sheet created.");
  } else {
    countsSheet.clear(); // Clear existing data
  }

  // Set headers for the "Location Wise Count" sheet
  countsSheet.getRange(1, 1).setValue("Location");
  countsSheet.getRange(1, 2).setValue("CRITICAL");
  countsSheet.getRange(1, 3).setValue("HIGH");
  countsSheet.getRange(1, 4).setValue("MEDIUM");
  countsSheet.getRange(1, 5).setValue("LOW");
  countsSheet.getRange(1, 6).setValue("INFO");
  countsSheet.getRange(1, 7).setValue("Overall Total");
  countsSheet.getRange(1, 8).setValue("Aged");
  countsSheet.getRange(1, 9).setValue("Risk Treatment Plan");
  countsSheet.getRange(1, 10).setValue("Within Tolerance");

  // Location group mapping based on the exact names you provided
  var locationGroupMapping = {
    "Richmond": ["Richmond VA", "Richmond VA", "Richmond DC"], // Group 1 (exactly as you specified)
    "GCP": ["Google Central", "Google East 1", "Google East 1"], // Group 2 (exactly as you specified)
    "Atlanta": ["Atlanta GA"], // Group 3
    "Jeffersonville": ["Jeffersonville IN"] // Group 4
  };

  // Initialize an object to store counts for each Location Group
  var counts = {};

  // Loop through each row and count VPR values and Risk Type values for each Location
  for (var i = 1; i < data.length; i++) {
    var location = data[i][locationIndex];
    var vpr = data[i][vprIndex];
    var riskType = data[i][riskTypeIndex];

    // Find the corresponding location group
    var groupName = getLocationGroup(location, locationGroupMapping);
    
    if (!groupName) {
      groupName = location;  // If the location is not part of any group, use the original name
    }

    // Initialize location group if not already in the counts object
    if (!counts[groupName]) {
      counts[groupName] = {
        "CRITICAL": 0,
        "HIGH": 0,
        "MEDIUM": 0,
        "LOW": 0,
        "INFO": 0,
        "Aged": 0,
        "Risk Treatment Plan": 0,
        "Within Tolerance": 0,
        "TOTAL": 0 // To store the overall total count (only VPR counts)
      };
    }

    // Increment the VPR count for the appropriate value
    if (counts[groupName][vpr] !== undefined) {
      counts[groupName][vpr]++;
      counts[groupName]["TOTAL"]++; // Increment the total count for this Location Group (VPR only)
    }

    // Increment the counts for Risk Type values separately
    if (riskType === "Aged") {
      counts[groupName]["Aged"]++;
    }

    if (riskType === "Risk Treatment Plan") {
      counts[groupName]["Risk Treatment Plan"]++;
    }

    if (riskType === "Within Tolerance") {
      counts[groupName]["Within Tolerance"]++;
    }
  }

  // Write the counts to the "Location Wise Count" sheet
  var row = 2; // Start from row 2 (after the header)
  for (var groupName in counts) {
    var countRow = [
      groupName,
      counts[groupName]["CRITICAL"],
      counts[groupName]["HIGH"],
      counts[groupName]["MEDIUM"],
      counts[groupName]["LOW"],
      counts[groupName]["INFO"],
      counts[groupName]["TOTAL"], // Overall total count for Location Group (VPR values only)
      counts[groupName]["Aged"],
      counts[groupName]["Risk Treatment Plan"],
      counts[groupName]["Within Tolerance"]
    ];
    countsSheet.getRange(row, 1, 1, countRow.length).setValues([countRow]);
    row++;
  }

  Logger.log('Location Wise VPR counts and Risk Treatment Plan counts generated and added to the "Location Wise Count" sheet.');
}

// Helper function to determine the location group
function getLocationGroup(location, locationGroupMapping) {
  for (var groupName in locationGroupMapping) {
    if (locationGroupMapping[groupName].indexOf(location) !== -1) {
      return groupName;
    }
  }
  return null; // If no group found, return null
}
